{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/eduardocunha/Documents/Projetos/dd-hours/src/app/api/csv/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport Papa from 'papaparse';\n\nexport async function GET(request: Request) {\n  const { searchParams } = new URL(request.url);\n  const id = searchParams.get(\"id\");\n\n  if (!id) {\n    return NextResponse.json(\n      { error: 'ID query parameter is required.' },\n      { status: 400 }\n    );\n  }\n\n  const csvUrl = process.env.CSV_URL;\n  if (!csvUrl) {\n    return NextResponse.json(\n      { error: 'CSV URL is not configured.' },\n      { status: 500 }\n    );\n  }\n\n  try {\n    const res = await fetch(csvUrl);\n    if (!res.ok) {\n      throw new Error('Error fetching CSV data.');\n    }\n    const csvText = await res.text();\n\n    const parsed = Papa.parse(csvText, {\n      header: true,\n      skipEmptyLines: true,\n    });\n\n    const record = parsed.data.find((row: any) => row.matricula === id);\n\n    if (!record) {\n      return NextResponse.json(\n        { error: 'Matrícula não encontrada.' },\n        { status: 404 }\n      );\n    }\n\n    return NextResponse.json({ record });\n  } catch (error) {\n    console.error(\"Error fetching CSV:\", error);\n    return NextResponse.json(\n      { error: 'Failed to fetch CSV data.' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,MAAM,KAAK,aAAa,GAAG,CAAC;IAE5B,IAAI,CAAC,IAAI;QACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAkC,GAC3C;YAAE,QAAQ;QAAI;IAElB;IAEA,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO;IAClC,IAAI,CAAC,QAAQ;QACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA6B,GACtC;YAAE,QAAQ;QAAI;IAElB;IAEA,IAAI;QACF,MAAM,MAAM,MAAM,MAAM;QACxB,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,UAAU,MAAM,IAAI,IAAI;QAE9B,MAAM,SAAS,wIAAA,CAAA,UAAI,CAAC,KAAK,CAAC,SAAS;YACjC,QAAQ;YACR,gBAAgB;QAClB;QAEA,MAAM,SAAS,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,MAAa,IAAI,SAAS,KAAK;QAEhE,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA4B,GACrC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAO;IACpC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA4B,GACrC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}