{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/eduardocunha/Documents/Projetos/dd-hours/src/app/api/csv/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\n\nexport async function GET() {\n  // Store your CSV URL in an environment variable (e.g., CSV_URL)\n  const csvUrl = process.env.CSV_URL;\n  if (!csvUrl) {\n    return NextResponse.json(\n      { error: 'CSV URL is not configured.' },\n      { status: 500 }\n    );\n  }\n\n  try {\n    // Fetch the CSV from the remote source\n    const res = await fetch(csvUrl);\n    if (!res.ok) {\n      throw new Error('Error fetching CSV data');\n    }\n    const csvText = await res.text();\n\n    // (Optional) Parse or process the CSV data server-side if desired.\n    // For now, we're just sending back the raw CSV text.\n    return NextResponse.json({ csvText });\n  } catch (error) {\n    console.error('Error fetching CSV:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch CSV data.' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe;IACpB,gEAAgE;IAChE,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO;IAClC,IAAI,CAAC,QAAQ;QACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA6B,GACtC;YAAE,QAAQ;QAAI;IAElB;IAEA,IAAI;QACF,uCAAuC;QACvC,MAAM,MAAM,MAAM,MAAM;QACxB,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,UAAU,MAAM,IAAI,IAAI;QAE9B,mEAAmE;QACnE,qDAAqD;QACrD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAQ;IACrC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA4B,GACrC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}